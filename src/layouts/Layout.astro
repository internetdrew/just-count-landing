---
import { Button } from "@/components/ui/button";
import "../styles/global.css";
import { ModeToggle } from "@/components/ModeToggle";
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Just the Count</title>
  </head>
  <body>
    <nav>
      <div
        class="max-w-screen-lg mx-auto p-4 flex justify-between items-center"
      >
        <a href="/" class="text-lg font-semibold">Just the Count</a>
        <div class="flex items-center gap-">
          <Button size="sm" className="text-xs sm:text-sm">Get Started</Button>
          <ModeToggle client:load />
        </div>
      </div>
    </nav>
    <slot />
  </body>
</html>
